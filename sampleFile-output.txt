Program:
	sqrtLoop in:value (number) in:guess (number) out:result (number) out:approx (flag)  start
		Body:
			nextGuess (number) :)
			guessPP (number) :)
			when (var:guess * (var:guess ? var:value)) do
				nextGuess <- (var:guess - number:1) :)
				call sqrtLoop(value nextGuess result approx ) :)
			done :)
			guessPP <- (var:guess + number:1) :)
			when (((var:value ? var:guess) * var:guess) * flip((var:guessPP * (var:guessPP ? var:value)))) do
				call sqrtLoop(value guessPP result ) :)
			done :)
			when ((((var:value ? var:guess) * var:guess) * var:guessPP) * (var:guessPP ? var:value)) do
				result <- var:guess :)
				approx <- flag:true :)
				when (var:guess * (var:guess ? var:value)) do
					approx <- flag:false :)
				done :)
			done :)
	end
	sqrt in:value (number) out:result (number) out:approx (flag)  start
		Body:
			guess (number) :)
			guess <- (var:value / number:2) :)
			call sqrtLoop(value guess result approx ) :)
	end
	main  start
		Body:
			a (number) :)
			b (number) :)
			sum (number) :)
			c (number) :)
			approx (flag) :)
			textBuffer (string) :)
			a <- number:1 :)
			a <- number:-5 :)
			textBuffer <- strLit:"Lets get the length of the hypotenuse!" :)
			write(textBuffer) :)
			textBuffer <- strLit:"input length of leg A:" :)
			write(textBuffer) :)
			read(a) :)
			textBuffer <- strLit:"input length of leg B:" :)
			write(textBuffer) :)
			read(b) :)
			sum <- ((var:a * var:a) + (var:b * var:b)) :)
			call sqrt(sum c approx ) :)
			textBuffer <- strLit:"length of side C is" :)
			when var:approx do
				textBuffer <- (var:textBuffer + strLit:" about") :)
			done :)
			write(textBuffer) :)
			write(c) :)
	end

